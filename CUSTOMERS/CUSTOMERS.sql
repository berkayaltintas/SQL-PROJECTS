--Q1) Write the query that returns customers whose names start with A.
SELECT * FROM CUSTOMERS WHERE CUSTOMERNAME LIKE 'A%'

--Q2) Write the query that returns customers whose names end with A.
SELECT * FROM CUSTOMERS WHERE CUSTOMERNAME LIKE '%A'

--Q3) Write the query that returns customers whose names start with A and are male.
SELECT *FROM CUSTOMERS WHERE CUSTOMERNAME LIKE 'A%' AND GENDER='E'

--Q4) Write the query that brings in customers born between 1990 -1995. (Including 1990-1995)
SELECT *FROM CUSTOMERS WHERE BIRTHDATE>='1990-01-01' AND BIRTHDATE<='1995-12-31'--Solution(1)

SELECT *FROM CUSTOMERS WHERE BIRTHDATE BETWEEN '1990-01-01' AND '1995-12-31'--Solution(2)

SELECT*FROM CUSTOMERS WHERE YEAR(BIRTHDATE)<='1995' AND YEAR(BIRTHDATE)>='1990'--Solution(3)

--Q5) Write the query that brings customers living in Istanbul.(Join)

SELECT CT.CITY,C.CUSTOMERNAME FROM CUSTOMERS C
INNER JOIN CITIES CT ON CT.ID=C.CITYID
WHERE CT.CITY='ÝSTANBUL'

--Q6) Write the query that brings customers living in Istanbul.(Subquery)
SELECT 
(SELECT CITY FROM CITIES WHERE ID=C.CITYID), *FROM CUSTOMERS C 
WHERE 
(SELECT CITY FROM CITIES WHERE ID=C.CITYID)='ÝSTANBUL'

--Q7) Write a query showing how many people live in cities.(Join)

SELECT CT.CITY,COUNT(C.ID) FROM CUSTOMERS C
INNER JOIN CITIES CT ON CT.ID=C.CITYID
GROUP BY CT.CITY

--Q8) Write a query showing how many people live in cities.(Subquery)

SELECT *,
(SELECT COUNT(*) FROM CUSTOMERS WHERE CITYID=CT.ID) AS CUSTOMERCOUNT 
FROM CITIES CT

--Q9) Bring the cities with more than 10 customers in order from most to least, 
--together with the number of customers.(JOIN)

SELECT CT.CITY,COUNT(C.ID) FROM CUSTOMERS C
INNER JOIN CITIES CT ON CT.ID=C.CITYID
GROUP BY CT.CITY
HAVING COUNT(C.ID) >10
ORDER BY 2 DESC

--Q10) Bring the cities with more than 10 customers in order from most to least, 
--together with the number of customers.(SUBQUERY)

SELECT *,
(SELECT COUNT(*) FROM CUSTOMERS WHERE CITYID=CT.ID)
FROM CITIES CT
WHERE 
(SELECT COUNT(*) FROM CUSTOMERS WHERE CITYID=CT.ID)>10

--Q11) Bring the query showing how many men and how many women live in the cities.

SELECT CT.CITY,C.GENDER,COUNT(C.ID)FROM CUSTOMERS C 
INNER JOIN CITIES CT ON CT.ID=C.CITYID
GROUP BY CT.CITY,C.GENDER
ORDER BY CT.CITY,C.GENDER 
--Q12) Bring the query showing how many men and how many women live in the cities.(SUBQUERY)
SELECT CT.CITY AS SEHIRADI,
(SELECT COUNT(*) FROM CUSTOMERS WHERE CITYID=CT.ID) AS MUSTERISAYISI,
(SELECT COUNT(*) FROM CUSTOMERS WHERE CITYID=CT.ID AND GENDER='E') AS ERKEKSAYISI,
(SELECT COUNT(*) FROM CUSTOMERS WHERE CITYID=CT.ID AND GENDER='K') AS KADINSAYISI
FROM CITIES CT

--Q13) Add something called Agegroup to the Customers table.

ALTER TABLE CUSTOMERS ADD AGEGROUP VARCHAR(50)

--Q14)Update the Agegroup field you added to the Customers table as 20-35 years old, 
--36-45 years old, 46-55 years old, 55-65 years old and over 65 years old.

UPDATE CUSTOMERS SET AGEGROUP='BETWEEN 20-35'
WHERE DATEDIFF(YEAR,BIRTHDATE,GETDATE()) BETWEEN 20 AND 35
UPDATE CUSTOMERS SET AGEGROUP='BETWEEN 36-45'
WHERE DATEDIFF(YEAR,BIRTHDATE,GETDATE()) BETWEEN 36 AND 45
UPDATE CUSTOMERS SET AGEGROUP='BETWEEN 46-55'
WHERE DATEDIFF(YEAR,BIRTHDATE,GETDATE()) BETWEEN 46 AND 55
UPDATE CUSTOMERS SET AGEGROUP='BETWEEN 56-65'
WHERE DATEDIFF(YEAR,BIRTHDATE,GETDATE()) BETWEEN 56 AND 65
UPDATE CUSTOMERS SET AGEGROUP='OVER 65'
WHERE DATEDIFF(YEAR,BIRTHDATE,GETDATE()) >65
SELECT *FROM CUSTOMERS -- AS YOU CAN SEE THIS QUERY.

--Q15)Calculate according to the age of the customer in the Customers table,
--and show how many people are in the age ranges. Note: The AGEGROUP columns will not be used.
SELECT 
CASE
WHEN DATEDIFF(YEAR,BIRTHDATE,GETDATE()) BETWEEN 20 AND 35 THEN 'BETWEEN 20-35'
WHEN DATEDIFF(YEAR,BIRTHDATE,GETDATE()) BETWEEN 36 AND 45 THEN 'BETWEEN 36-45'
WHEN DATEDIFF(YEAR,BIRTHDATE,GETDATE()) BETWEEN 46 AND 55 THEN 'BETWEEN 46-55'
WHEN DATEDIFF(YEAR,BIRTHDATE,GETDATE()) BETWEEN 56 AND 65 THEN 'BETWEEN 56-65'
WHEN DATEDIFF(YEAR,BIRTHDATE,GETDATE()) > 65 THEN 'OVER 65'
END AGEGROUP2,COUNT(*)
FROM CUSTOMERS
GROUP BY 
CASE
WHEN DATEDIFF(YEAR,BIRTHDATE,GETDATE()) BETWEEN 20 AND 35 THEN 'BETWEEN 20-35'
WHEN DATEDIFF(YEAR,BIRTHDATE,GETDATE()) BETWEEN 36 AND 45 THEN 'BETWEEN 36-45'
WHEN DATEDIFF(YEAR,BIRTHDATE,GETDATE()) BETWEEN 46 AND 55 THEN 'BETWEEN 46-55'
WHEN DATEDIFF(YEAR,BIRTHDATE,GETDATE()) BETWEEN 56 AND 65 THEN 'BETWEEN 56-65'
WHEN DATEDIFF(YEAR,BIRTHDATE,GETDATE()) > 65 THEN 'OVER 65'
END
--OR WE CAN USE THIS WAY.
SELECT AGEGROUP2,COUNT(*) AS CUSTOMERCOUNT  FROM
(
SELECT 
CASE
WHEN DATEDIFF(YEAR,BIRTHDATE,GETDATE()) BETWEEN 20 AND 35 THEN 'BETWEEN 20-35'
WHEN DATEDIFF(YEAR,BIRTHDATE,GETDATE()) BETWEEN 36 AND 45 THEN 'BETWEEN 36-45'
WHEN DATEDIFF(YEAR,BIRTHDATE,GETDATE()) BETWEEN 46 AND 55 THEN 'BETWEEN 46-55'
WHEN DATEDIFF(YEAR,BIRTHDATE,GETDATE()) BETWEEN 56 AND 65 THEN 'BETWEEN 56-65'
WHEN DATEDIFF(YEAR,BIRTHDATE,GETDATE()) > 65 THEN 'OVER 65'
END AGEGROUP2
FROM CUSTOMERS
) GS
GROUP BY AGEGROUP2 --THIS IS  A DYNAMIC QUERY. WE CONSIDER QUERY LIKE A TABLE.

--Q16) Bring those who live in Istanbul but do not live in Kadýköy by writing a query.

SELECT *FROM CUSTOMERS C 
INNER JOIN CITIES CT ON CT.ID=C.CITYID
INNER JOIN DISTRICTS D ON D.ID=C.DISTRICTID
WHERE CT.CITY='ÝSTANBUL' AND NOT D.DISTRICT='KADIKÖY' --SOLUTION(1)

SELECT *FROM CUSTOMERS C
WHERE CITYID=(SELECT ID FROM CITIES WHERE CITY='ÝSTANBUL') AND
DISTRICTID NOT IN (SELECT ID FROM DISTRICTS WHERE DISTRICT='KADIKÖY')--SOLUTION(2)

--Q17)Assume we delete the record "Ankara" from the CITIES table. The city field of the customers who are in Ankara will be empty.
--Write the queries that list the customers whose city field is empty.

DELETE FROM CITIES WHERE CITY='ANKARA'--SOLUTION(1) STEP(1)

SELECT *FROM CUSTOMERS C  --STEP(2)
LEFT JOIN CITIES CT ON CT.ID=C.CITYID
WHERE CT.CITY IS NULL

SELECT *FROM CITIES  --SOLUTION(2) STEP(1)
SELECT *FROM CUSTOMERS WHERE CITYID NOT IN  (SELECT ID FROM CITIES) --STEP(2)

--Q18) Add the name Ankara in the same order.
SELECT *FROM CITIES --Control! We cant see Ankara ýn table.
SET IDENTITY_INSERT CITIES ON -->It is mandatory to write this information.
INSERT INTO CITIES(ID,CITY)
VALUES(6,'ANKARA') 
SELECT *FROM CITIES --Control again. We can see Ankara in table.

--Q19) We want to bring operator numbers. Like (532),(505). Write the required SQL query for this.

SELECT *,SUBSTRING(TELNR1,1,5) AS OPERATOR1, --Start first.Go five letter.
SUBSTRING(TELNR2,1,5) AS OPERATOR1 FROM CUSTOMERS

--Q20) Let x operator start with "50" or "55", operator y starting with "54" and
--z operator starting with "53". How many people are there from each operator?
-------------
SELECT 
CASE
   WHEN TELNR1 LIKE '(50%' OR TELNR1 LIKE '(55%)' THEN 1
   ELSE 0
END AS TELNR1_XOPERATOR,
CASE
   WHEN TELNR1 LIKE ('54%') THEN 1
   ELSE 0
END AS TELNR1_YOPERATOR,
CASE
   WHEN TELNR1 LIKE ('53%')  THEN 1 -------------STEP(1)
   ELSE 0
END AS TELNR1_ZOPERATOR,
CASE
   WHEN TELNR2 LIKE '(50%' OR TELNR1 LIKE '(55%)' THEN 1
   ELSE 0
END AS TELNR2_XOPERATOR,
CASE
   WHEN TELNR2 LIKE ('54%') THEN 1
   ELSE 0
END AS TELNR2_YOPERATOR,
CASE
   WHEN TELNR2 LIKE '(53%' THEN 1
   ELSE 0
END AS TELNR2_ZOPERATOR,
 *FROM CUSTOMERS
 ------------------------------------------------
 SELECT 
 SUM( TELNR1_XOPERATOR + TELNR2_XOPERATOR ) AS XOPERATORCOUNT,
 SUM(TELNR1_YOPERATOR + TELNR2_YOPERATOR) AS YOPERATORCOUNT,
 SUM(TELNR1_ZOPERATOR + TELNR2_ZOPERATOR) AS ZOPERATORCOUNT
 FROM
 (
 SELECT 
CASE
   WHEN TELNR1 LIKE '(50%' OR TELNR1 LIKE '(55%)' THEN 1
   ELSE 0
END AS TELNR1_XOPERATOR,
CASE
   WHEN TELNR1 LIKE ('54%') THEN 1
   ELSE 0
END AS TELNR1_YOPERATOR,
CASE
   WHEN TELNR1 LIKE ('53%')  THEN 1 ------------------------------------------------STEP(1)
   ELSE 0
END AS TELNR1_ZOPERATOR,
CASE
   WHEN TELNR2 LIKE '(50%' OR TELNR1 LIKE '(55%)' THEN 1
   ELSE 0
END AS TELNR2_XOPERATOR,
CASE
   WHEN TELNR2 LIKE ('54%') THEN 1
   ELSE 0
END AS TELNR2_YOPERATOR,
CASE
   WHEN TELNR2 LIKE '(53%' THEN 1
   ELSE 0
END AS TELNR2_ZOPERATOR,
 * FROM CUSTOMERS 
 ) T    -- We did dynamic query.Very important.

--Q21) Bring the number of people in each distinct. According to the number of cities.

SELECT CT.CITY,D.DISTRICT ,COUNT(C.ID) AS CUSTOMERCOUNT FROM CUSTOMERS C
INNER JOIN CITIES CT ON CT.ID=C.CITYID
INNER JOIN DISTRICTS D ON D.ID=C.DISTRICTID
GROUP BY CT.CITY,D.DISTRICT
ORDER BY CT.CITY,COUNT(C.ID) DESC


--Q22) Bring in customers' birthdays as days of the week.

SELECT DATENAME(DW,BIRTHDATE) ,BIRTHDATE,CUSTOMERNAME FROM CUSTOMERS

-- For example, if we wanted to do it in spanish.
SET LANGUAGE Spanish --> We ajdust like this.
SELECT DATENAME(DW,BIRTHDATE) as dayofweekk ,BIRTHDATE,CUSTOMERNAME FROM CUSTOMERS
SET LANGUAGE English --> We go back to the old setting.

--Q23) Bring people whose birthday is today.
-- TODAY= 2022-11-20
SELECT CUSTOMERNAME,BIRTHDATE FROM CUSTOMERS 
WHERE MONTH(BIRTHDATE)=MONTH(GETDATE()) AND 
DAY(BIRTHDATE)=DAY(GETDATE())
