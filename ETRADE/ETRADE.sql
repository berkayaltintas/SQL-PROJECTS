
--Q1) Write the SQL query on the SALEORDERS Table, which brings the information of how much sales were made in which city.

SELECT CITY ,SUM(LINETOTAL) FROM SALEORDERS
GROUP BY CITY
ORDER BY 2 DESC -- 2=SUM(LINETOTAL) --> LINETOTAL= AMOUNT X PRICE

--Q2) Write the query that brings the information about how many sales are made per month according to the cities in the Saleorders Table.

SELECT CITY,MONTH_,SUM(LINETOTAL) FROM SALEORDERS
GROUP BY CITY,MONTH_
ORDER BY CITY,MONTH_

--Q3) We want to find out on which day of the week each province does business the most and make a campaign accordingly. 
--Please provide the information on how much sales the cities worship according to the days of the week.

SELECT CITY,DAYOFWEEK_,SUM(LINETOTAL) FROM SALEORDERS
GROUP BY CITY,DAYOFWEEK_
ORDER BY CITY,DAYOFWEEK_
--I try to translate the data into English as much as I can. 
--This is how we can turn the days. The numbers at the beginning allow us to sort the days in order.(Not Alphabetical)

UPDATE SALEORDERS SET DAYOFWEEK_ ='01.MONDAY' WHERE DAYOFWEEK_= '01.PZT' --IN TURKISH PAZARTESÝ = PZT= MONDAY
UPDATE SALEORDERS SET DAYOFWEEK_ ='02.TUESDAY' WHERE DAYOFWEEK_= '02.SAL'-- IN TURKISH SALI = SAL = TUESDAY
UPDATE SALEORDERS SET DAYOFWEEK_ ='03.WEDNESDAY' WHERE DAYOFWEEK_= '03.ÇAR'-- IN TURKISH ÇARÞAMBA = ÇAR = WEDNESDAY
UPDATE SALEORDERS SET DAYOFWEEK_ ='04.THURSDAY' WHERE DAYOFWEEK_= '04.PER'-- IN TURKISH PERÞEMBE = PER = TUESDAY
UPDATE SALEORDERS SET DAYOFWEEK_ ='05.FRIDAY' WHERE DAYOFWEEK_= '05.CUM'-- IN TURKISH CUMA = CUM = FRÝDAY
UPDATE SALEORDERS SET DAYOFWEEK_ ='06.SATURDAY' WHERE DAYOFWEEK_= '06.CMT'-- IN TURKISH CUMARTESÝ = CMT = SATURDAY
UPDATE SALEORDERS SET DAYOFWEEK_ ='07.SUNDAY' WHERE DAYOFWEEK_= '07.PAZ'-- IN TURKISH PAZAR = PAZ = SUNDAY

-- SOLUTION (SUBQUERY )
SELECT  CITY,
(SELECT SUM(LINETOTAL) FROM SALEORDERS WHERE CITY=S.CITY AND  DAYOFWEEK_='01.MONDAY') AS MONDAY,
(SELECT SUM(LINETOTAL) FROM SALEORDERS WHERE CITY=S.CITY AND  DAYOFWEEK_='02.TUESDAY') AS TUESDAY,
(SELECT SUM(LINETOTAL) FROM SALEORDERS WHERE CITY=S.CITY AND  DAYOFWEEK_='03.WEDNESDAY') AS WEDNESDAY,
(SELECT SUM(LINETOTAL) FROM SALEORDERS WHERE CITY=S.CITY AND  DAYOFWEEK_='04.THURSDAY') AS THURSDAY,
(SELECT SUM(LINETOTAL) FROM SALEORDERS WHERE CITY=S.CITY AND  DAYOFWEEK_='05.FRIDAY') AS FRIDAY,
(SELECT SUM(LINETOTAL) FROM SALEORDERS WHERE CITY=S.CITY AND  DAYOFWEEK_='06.SATURDAY') AS SATURDAY,
(SELECT SUM(LINETOTAL) FROM SALEORDERS WHERE CITY=S.CITY AND  DAYOFWEEK_='07.SUNDAY') AS SUNDAY
FROM SALEORDERS S
GROUP BY CITY
ORDER BY 1

--Q4) Find the top 5 best selling categories of each province.

SELECT  S.CITY,S1.CATEGORY1,SUM(S1.TOTALSALE) AS TOTALSALE FROM SALEORDERS S
CROSS APPLY (SELECT TOP 5 CATEGORY1,SUM(LINETOTAL) AS TOTALSALE FROM SALEORDERS WHERE CITY=S.CITY GROUP BY  CATEGORY1 ORDER BY SUM(LINETOTAL)) S1


GROUP BY  CITY,S1.CATEGORY1
ORDER BY  CITY,S1.CATEGORY1

-- WE APPLY CARTESIAN MULTIPLICATION WITH CROSS APPLY.

--Q5) Find the 3 best-selling categories of each province and the 3 best-selling categories under it.

SELECT S.CITY ,S1.CATEGORY1 ,S2.CATEGORY2,SUM(S1.TOTALSALE ) FROM SALEORDERS S
CROSS APPLY 
(SELECT TOP 3 CATEGORY1,SUM(LINETOTAL) AS TOTALSALE FROM SALEORDERS WHERE CITY=S.CITY GROUP BY CATEGORY1 ORDER BY  SUM(LINETOTAL) DESC ) S1
CROSS APPLY
(SELECT TOP 3 CATEGORY2,SUM(LINETOTAL) AS TOTALSALE FROM SALEORDERS WHERE CITY=S.CITY AND CATEGORY1=S1.CATEGORY1 GROUP BY CATEGORY2 ORDER BY  CATEGORY2,SUM(LINETOTAL) DESC ) S2
GROUP BY S.CITY ,S1.CATEGORY1,S2.CATEGORY2
ORDER BY 1,3,4

--Q6) Try to get the SALEORDERS table by using join.

SELECT  U.USERNAME_,U.NAMESURNAME,U.TELNR1,U.TELNR2 ,
CT.COUNTRY,CTS.CITY,T.TOWN,ADR.ADDRESSTEXT,O.ID,IT.ITEMNAME,
IT.BRAND,IT.ITEMCODE,IT.CATEGORY1,IT.CATEGORY2,IT.CATEGORY3,IT.CATEGORY4,
OD.AMOUNT,OD.LINETOTAL,O.DATE_,CONVERT(DATE,O.DATE_) AS ORDERDATE,CONVERT(time,O.DATE_),
YEAR(O.DATE_)AS YEAR_,DATENAME(MONTH,O.DATE_) AS MONTH,DATENAME(DW,O.DATE_) AS DAYOFWEEK_
FROM ORDERS O
INNER JOIN ORDERDETAILS OD ON OD.ORDERID=O.ID
INNER JOIN ITEMS IT ON IT.ID=OD.ITEMID
INNER JOIN USERS U ON O.USERID=U.ID --DEPAND EACH OTHER.
INNER JOIN ADDRESS ADR ON ADR.ID=O.ADDRESSID
INNER JOIN COUNTRIES CT ON CT.ID=ADR.COUNTRYID
INNER JOIN CITIES CTS ON CTS.ID=ADR.CITYID
INNER JOIN TOWNS T ON T.ID=ADR.TOWNID

--Q7) Using relational tables, 
--write the query that returns how much sales were made in which city.

SELECT CT.CITY,SUM(O.TOTALPRICE) FROM ORDERS O

INNER JOIN ADDRESS AD ON AD.ID=O.ADDRESSID
INNER JOIN CITIES CT ON CT.ID=AD.CITYID
GROUP BY CT.CITY
ORDER BY 2 DESC --SOLUTION(1)


SELECT C.CITY,
(SELECT SUM(TOTALPRICE) FROM ORDERS WHERE ADDRESSID IN
( SELECT ID FROM ADDRESS WHERE CITYID=C.ID) )
FROM CITIES C --SOLUTION(2)

--Q8) Bring the best-selling 'CATEGORY1' field of each brand according to the main category.

SELECT IT.BRAND, IT.CATEGORY1,SUM(OD.AMOUNT) FROM  ORDERDETAILS OD
INNER JOIN ITEMS IT ON IT.ID=OD.ITEMID
GROUP BY IT.BRAND, IT.CATEGORY1
ORDER BY 3 DESC

--Q9) Bring the best-selling brand of each brand according to the main category.

SELECT IT.CATEGORY1,IT.CATEGORY2,IT.BRAND,SUM(OD.AMOUNT) FROM ORDERDETAILS OD

INNER JOIN ITEMS IT ON IT.ID=OD.ORDERID

GROUP BY  IT.CATEGORY1,IT.CATEGORY2,IT.BRAND
ORDER BY SUM(OD.AMOUNT) DESC
--Q10) Write the query that brings the information of how much each product is sold at an average, maximum and minimum.

SELECT IT.BRAND,IT.CATEGORY1,IT.ITEMCODE,IT.ITEMNAME ,
COUNT(OD.ID) AS SALECOUNT,SUM(OD.AMOUNT) AS TOTALAMOUNT
,MIN(OD.UNITPRICE) AS MINPRICE,MAX(OD.UNITPRICE) AS MAXPRICE, AVG(OD.UNITPRICE) AS AVGPRICE
FROM ITEMS IT

INNER JOIN ORDERDETAILS OD ON OD.ITEMID=IT.ID

GROUP BY IT.BRAND,IT.CATEGORY1,IT.ITEMCODE,IT.ITEMNAME


--Q11) Bring the number of records of customers in the system 
SELECT U.NAMESURNAME,
(SELECT COUNT(*) FROM ADDRESS WHERE USERID=U.ID ) AS ADDRESSCOUNT,( SELECT ADDRESSTEXT FROM ADDRESS WHERE ID IN
(SELECT TOP 1 ADDRESSID FROM ORDERS  WHERE USERID=U.ID ORDER BY DATE_ DESC) )


FROM USERS U

--Q12) Write the query listing the cities that place orders of 500 TL or less per day for at least 10 days in January.
SELECT CITY ,COUNT(*)FROM
(
SELECT  CT.CITY,CONVERT(DATE,O.DATE_) AS DATE_,SUM(O.TOTALPRICE) AS TOTALPRÝCE
FROM ORDERS O
INNER JOIN ADDRESS AD ON AD.ID=O.ADDRESSID
INNER JOIN CITIES CT ON CT.ID=AD.CITYID
WHERE O.DATE_ BETWEEN '20190101' AND '20190131 23:59:59'
GROUP BY CT.CITY,CONVERT(DATE,O.DATE_)
HAVING SUM(O.TOTALPRICE)<500
) GS
GROUP BY CITY